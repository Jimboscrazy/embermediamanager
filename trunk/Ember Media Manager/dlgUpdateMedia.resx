<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAcIAAA
        HCABzQ+bngAAFUVJREFUaEPVWQdUVcmyvebsmPWpE0zjjAFBUIKkS1ZAoiBBcryAgCRB4iVKBgFJiiTJ
        kjMoSDCAoCiKoGIWzIpiAO/+ffjoIOqMb96fv/4/a21Oc0+fqtrV1dXVfcYAoP2/vigC/yQyO9+NiW3t
        H5t8+f34otuDE4/ffzPx3kDvuP8pnf+o8ZSRdkWvx9oXvRjvWNw3xbns9Wyv6rf/Cq5/v+xQ68DKvOsD
        Sy6+fD7lPyHzjxPYnX5vjHnKzfGMIzemGMd1zjaIvrpE72DXKpPDd7gcsp+IBR5/LZ184S3fqcdv5vwd
        Iv84AYujd8aaJ1MErk81OdQ1zzi24yfDqEu/6x24sFk7uEVsV9AFJUZct4FP8VOjtLY39NcYnPTvEPle
        AtPzbwxyhxXdtXSKupi172Brp6xWEvf3KHIueDDOIfvOBKfC3mnmyd0L9A5eWaYd1rZeL7yNXzf0vLRO
        ULO6pu8pfVXPM2aM6C6n0OqnlpV33//6PbKHEtDojp7J7ZPjTvYsSWl+Kemf1e1hH3a+wtCpplfZIB9i
        ckng5AuDnn0JhGUit36PEkvfqrEWvtUTrQNrZroktC7xzb++mll0l2v3kS66RsA5RU3/Jl0t/7MMTZ9T
        1qputQ47mae9XDNuh2Rf7pf6HvlfEIg58YDXM6mjX3pnBvjFY8GxOQi/r2Vi9RoX/L5+Hzh4PGDkXMpa
        8av76u9RsPp3Fxobp8+YSTT98es3eEwXlQ5fqmWZtcnx4OntPvndWpYJHaYqno3WGl6Ne9U9691U3Wp8
        FRyqw6xjrxxNaXmp81c6vhpCoYV35bWs83vWbXDG2g37sJ7TFWxcbuTuBn6JYBi7lj+n0YRm/ZXwbz2n
        0fgn/LjE5mfZnfEK9uH1Tl55N1x27T/jvsOlxm+ne22IivPxaNk9pUfMws+XJzc/Z/yZnm/OgbjaJ1ES
        ioewhpDYsJkJdm5PrOdyh4RyDIxdyjupxe/vEvj4HiVj6WIbdlXDVCfvjMsHTCNbQxUcqqJV9h0/ory3
        Ml16d1G+eXhLc/r5l9rfdMbXHmS09Ulp7akaXLfRlxjOBAevF4E3IeABed0kGDiVnvhPjR/5Po0mOJNf
        LNjMJa4pzSrmQuJ2m7IMZYeKAkW70oqtjPx6u9i2jtLu91u+pvMLLz4EZtkEt/Syc4eAnYeJjVt8yJ0Q
        4PPBGg43qFlkQce2MPHb4UGbQ6NNFaXR1jImTuN2mzlHwO2HuQIMGu0X8hvtT3M920amnmNEY7lFZEuh
        jGVxhaJtaZ2cZeFZaUZ+l3dmV9MTYOZovV8QCMq9FSOqkAq2TUxw8vuAbbMnROSjsO/gWdDloqBumQN1
        8xzmF4Joy4XGTuDI5ODVfaZhFARbjzSEH65CZOIJeIUVwXBPDNR0PZ+tY1fNpNHmCn3LARs2Ms2dY842
        6/k11MlYFDQRAhe3meRcVXOs6I872RvwpwSqH3xYo+90krWOy2/IeE4BP2wSDoCVfy1k1BPyfdOuHLYP
        PwUx+Rj9j4LGT2RbTBvPlrWKTR2apgfhc7AeIUeakV3Vjai0C3ALPU5QjYC4RmSUXsb+yFL8tEqZJPAN
        WQsWii7+GhEBsZBQ96S2LjICbbLm+V2yZnm3xHTSH9pENvfVPcJvn4XfyH/8Mm4cFZJNJOHiTQz3Bxu3
        FwxdSqFqnPGQDP8PVF+boIYEHnqIDNWeOGUjH20M54MV7AZw8CuBnW8ZbH1KEJd9HtZe5dC0zoWeQxl0
        7fLhFnaCPCsl9+PwDK/ESg59TJkl+GDs+I18X44m26ydJmlnHA+13ZY0zL4twzjWs9Ug87GCRR4OlN1O
        +CqBlrdYYuze8H4DTwAxfj84Bf0hrhIHc69qLFuxV3O0kolTeHnGTxfqp02Thob5YTBc8qG/twSR6W3U
        JIe8UTaUGLkEedCwqYadfx00rHIJqRyEHD6NkuPtmDhPHmMm8/aPm7iJZ7T8pUv3yNsE173ScDneI0WM
        32aY9ZyunvzG5sCZV5cG8GnkPs2Bg1W9tjJaOdjI7wdu0SCwk7spsxJyWknnRwsfN37z/Akz6A8nzlPA
        7JUMaNnkQFQjDb5HrsPIowniBlXYxqiDlGk9xI1qoLG3AQbuzZA1KcVWvWz4RJ9CfnUnpvxkSkgoYdpc
        sYczfxBaOFqPnGbCCYfY82/FtNOebzXI6BPVTOlXtSlE/Mkem0+p+GPDOfZyA69EDDaLBmCzWDDoijFD
        3l+xykljtOBJM0VypyxUwNSfTLCSZCm6ZipkjfNgG3oJW3ZVQ9T4FOjGTaCbtEDAqBWaHh1Q2dcOIfMO
        mPlfhIZDFay9T6C4uh2824Ow6DddQkI8d7SeX36xU9kTVA+lPSV9EjpH+yW0U9+J70qG25ELDZ8R6ALm
        mTAb32wUDAaPRAg4hQOhaZOHXVbHntBoi6aOFDxjjtiWmYsVMXM5A7N+34e1ktEQ1i2AnmczNumcBrd+
        EwRM2yBkdpHgEniN2qDiehXyjpdhHn4LOvuvgVf3JAKSOlHecA//2sjE9GVmmLpQHpNnCH2W62m0WVO1
        rXPvMvxPDdLVEt+Ja6UMCCofAsO35s2lt5hH2TUUQpmX+ulqlmVDhvNJhYNLNBgMryps3RGfMdorU+ZK
        5yxZb45fBf0wm90fm1QyEZRxHWLWrfhxRxPWaZ8Hu34bOAzawGl4ETyMS0g7/gRxpY9At26HiM1laO/v
        wCLJEoiYnAC3Sjrms3thzioTTFsgnzNan5RSdKpNeDPoakmDYppJLEGleKjbFiDp9GP6JwKRFT1m2/WO
        DYUO37YDEJA7CHPvanBw+5qMFDh2vMCs+St1+v7F4QQe5cOQtShBcf1d0gXQ8u3EGqNL2Ey8Tre7AgWP
        LugEdUM35CZ8Mh5AxuUquAgZw7Cb+I2QW67WCH7TOihYlWEJfzR+5PHHnOWGfRMmsn1WY23gZBpbB5+C
        lF4WS0QtAULK8ZAzTEdAzlWzTwT8c275S6gdBa9UGPikI7BVKwmmHhVYMNfqsyGdtkBZ9EeOPdikEI1f
        RGKwQb0QrV0vhwiEF/VCk4SI3oFb0A69CSW/6xB2vIrfjUgoOXTAKekezGLvgJ2E1obd7eAkI8FldhZa
        Ho1YLRWHXyWTsJjLHzMXSIuOdNq8WWZbzMl8UTAvhPCOeAgTApKaiXA91OL/iYBX6rUjIjuSsEUmAnwy
        kVAwzaRK5g80mtKykcLmrzI2/5nHHVvUU6C6twpsOlUwjexEyYU+CDl3gJMYvHHPZbBbXwYHAZftFay3
        bEdAbs8QycD8HqyxaAe3/RUIeF3DZtvz0A84D55dOWCTT8FK4TDMW6Fv/lmep8kvM3Ip/6BqUw5BhVgI
        KcVBhBCxP3Aq4RMBj6Srx+jKRyCwPQpbZKOgYplLcnnxaxqNd/5IYUvZ7X3WkjnCseMoxCwqYB3bgdLW
        53DMfADZoBvg874GIc8uCDE7P4FrXwfccx7g1uP3sEq6C27nqxB06wQ98i74Am7AMLQdkrsrwK2Vh/Uy
        0VjCZuv2OQGe+fqOJa/V7CrAT0JbUCEGQgTWQSfTPhFgJnceE1FJIg+jSadoqFrnUQRe0Wibhmb6Ryzn
        ZfpwkdgXMizAFhOyRjBbUNPRh/Szz9Hc3Y+dh+5AlBCh+1+HOLlTEAm8DitCUD3uNgwT74JOspBEwHVI
        xd6DyIFuGERcwfa9J8FvUoFNqslYLeg9igD3PL29xa92khGgnEvNT0ECS/+aPwh4p18/Iq6eCiGS+wUV
        47CDjICxS9kAjSbz00gCq+mB5ny70iBpVQUpuzoo+13Anoy7UI27icrOVwg4+RQelY/hUNgLo4z7MM9+
        gNLLfYioewrh8G5YkVBSPXwHEsTwrVHdkAq+iv25t2AT1QbdgHNQ2FOE30SDRoXQ9h/1nUoHlEjCIPOT
        xS8TyaII7N5f80cIBeXf9pfWyxqKL7rKYciZZsOMpNFZ0xlcQ8M0vHkhwsWFDI5BzqkBcs6noRd2CR5F
        9yEd3Q3jYw/ArH0KI2K88/HH8Dv1DHV33gzF/p0XA/AlJPYTRJHRsi95CKfSXgRW9uDVm0Hc6OmHQ0IH
        xEzysUI4SOzzSczgMnKthDTJknzbwlkkS7KE5aOxJ+jkH5M45sQjMyWLwiEComqJkNRJhWVALdi5vIdq
        IHKNpf4sWmc+T8SkoE/VswkqXi0wi74C3+L72JV8E4YFPYhrewnfphewq3sGh4bniG5/he6+QRy70Y/A
        1j4EnHuBiNYXOHT+JewK78Mq5Qbab79C6bnH0CaTWdK8uG8Rm93ckU7j2OSpacKsIdknmcW3NYzFIxHK
        EtsRC8eo03+k0WMd7+g6zschQAiIaSZDeGcirILryUIWGzssbCKxfwLVFjEtyFX3OQft4HZYHepCaMUD
        mGXchn3VQ/i3vEDxvXcIvdqPsK63SL3zDqm33yGggxC43A8vQsKh/im86x4jvuERXLNuIZ9sU7wzb0KZ
        SRYrk8LcYX3jP+qTVDoYa+xRB27JgyxeyVAWFz2QJb3rCHzT2/9YyG6QUsIqtOmNIJmgElop1KoHY99a
        6OzJvUUETSGYRDCNEi5okMu/07sZpjFdsEnqRhwp0B2JN30bnyKorQ9599+j/PEg4u8NoPLZB2Q/HETi
        /UEcvvMe0dfeEJIvEXH2GTofvkUEIe957C4YsddAyRQ0zBtad4Z1TqDuamYZtzRsq7FJJIR4P4S1kVTJ
        O0zT3+Rd7vujlKBe8k7vapDQTgMpmCChkwZFq0ISZ3VYuEB7+/Dp9acTM2Xm2VxG3DXYpt9BctMz+J98
        gvDWlzh0/S2S7w+g/iULlS9YqH/FQt4zFo49/YDMR4M4Qkik3XiLo5dfwbG4B9G1j3Dj0TtYkypWwf3M
        kPdHjDht6Y/6241dqyCmmsHaLBrIIlUyaxM9EHqORZ8Xc9RLCY1PbdXsyyBKQoiUrhAjJOwPNkNOM75y
        ZExS7W0OdQsNIq88tMu6h6TmF4g/34eo9tdIIQZmP/qA3Ocs3B0AXn0AyvpYyCdkjj0ld/KsmIxQBFn4
        vGueIJBM9pTTT2ES3fGQblP3qZz+mDSk1WKqDN3qwUUPZ20WCWBxCu5n0eUiYRfWYPuJ7MfGxXdYYhvZ
        8l5EIwXbjLIgZZgFDZdqlk3QScyboy8wMjNQbTX/Ft7dKTf7Q+ufI4PEeFR7PyEwgJzHH5BDvN7xFiD2
        o/kNGQVCKPsJC1VkJJJvvkNU2yv4kYke1fgctkdv9ku7N/GOlr90qZmgoXM5pDRyhgwnO0TWBnK4oGSY
        +j6h4eGSLwhQPxwov5umsLsAWw0zIcPIZZHt3IBD/HmWhlnmKSoTjRjiMVR7B7Nc3Db79qOEtrc4dOUN
        Dl17h6Mk9jNJ3Bc8+YAG4v0KMg+okLpAwqmoZwAHSb+wlteIaOqHX8m9R0rupUNpk4ceJOwQ3hj0UYey
        YWqbntNJcAiEsLiE/Fgb+X1ZPCKBpEYrPzqS7GenEid6BtfZRJ1jkQ00yEZ6UNY8752iXVmfW2LboJBk
        iOsIAuMIoRkEM1fwyG0zizt1NqL5NWI7PuDwtQEkdpNYJ6NR2DOIhNsDSLv9Htf6PoAcGiCTZIzYFmJ8
        VtNZTrriNkrGUHaTDdexDT2L/VndobIacf6mzFpS2icQw31Y5HCBRZ1JyekksgLzOtZ9kwD1ILy0K0nN
        sRLkKOO9nGVBv4xF/hN9/zN3nGObH7CxuyqNSHOzifLVBNwE2zdtN4wwjz1xxa+2dyCq7T3iO4HUbiCe
        7JYOkXbMpffwPtE7YEn68CsYRVDvEGymZFAyVYxTXDSsyyCimACb4DOQUMkiIePDIudSrA3cniw+sSAY
        uxUmjQ61L86F7Pz9lzHT2h9Jk834dsvClwo2xb2yVsXXdkdfuuQYeaZ1Hdu+oVNpck0nWD5MQHLYIO3Z
        /1ruwS1nkCRnFVCh7hbXoOYa1yhvHVCxWU4/aRZ5RvppD/el3qHIL6fk7bI+Fq+2uxhrNnqASzCUHKgF
        sjj4vFgcPF6s9Zzu2GmW/kTDxuOz6njIjtGMhlJqcomuXUwr2ZTnPicE7irZl12Rsy0/bX3oao1LXEuV
        gOj+ncOrMxVGKwjYCfgI6ATiBFRoUB5WHAbV3jr8jOpD9aXeod4dyud6DkXl8mTDv56LSYz2JKfgnix2
        grXsLixp9fgPOntj9b5m6xcEiEBq1Z0RkHMmkBF8enCrWe5NRbuSSzucKusV9lYXmcd2Znqmd6btNE4y
        H0+TWTzcfy65/0SwkuA3grUE6wk2DINqU79Rz6g+VN+FBD8QUAvWGH3H0nZJlWTqAJlFDpJZ5ECZtY7D
        lSUgGQIL36KU4VEfqgb+dA6MCI9FgbnNccYBDY+3WeSdV9pbUqfiUp2/w7XmiG5oe4hXQa8PyceWMioR
        vJPHSFDzgVqtpw4bRf1PkZo3DKpNzkyHDKZGjepHOWroayXh9IO+Y9kTAalorN/oymIjJNg43VjriPfX
        sbuyZDQSeo3c8hW/awSGCRChtJkES/yzz4QxQhqvSlvln1DcW5yv4lKZoMas9VPzbbaxzXio613Yu8M+
        4ozgLou05YLiXrN+mCo8adYctgkTJswcP27cZMq7FKjahspcFKjCcAyl4KNBP/1ivkrXvvQDJ18g+Yji
        xPptjSMorGd3BRefFwQkQqHrUNRnFVjzxWetb57xUwrINY1ggc/R43Z7os+clLcvype3K4hT3lfsp+pe
        uUfN66S6VsglcbucF5w+Vf2rmcfuLHWIaZrD8K2YauhWOEHTMnHsGg4d2pgx4/70W4KAVIC4plUR+Rrk
        hy3kXIoUcFDQPfJ4p1lyo65DZpBN6Ilt1sE1S/SdiiZ/Vwh9FmP/7cGpzlFp25wTT8drelbEy9rkesg7
        5FooOuWpK7sUiqt4lHOo+TUs04vpXGBb8GKGe+3gJJey5+Pdaz8MLXh/BRG5EHEGs/K2rn12pYFz6n51
        6wB13q0ym4jen4dD8QvDP61JfyX8Y0gNpToGY7FXaq2mZcQJR1XXQlNZ22x5OftsQYW9WesVnbJ/VnDM
        nK/knD1dzadiorpvxXd/jZ80lTZtzqI5VEai5s5kAqoCpuYJ1aYcSIXeV53xl975GsGAowWLmal1ApYR
        x8V2eRVzK+3LWy3nmLNY3il7trJr7tQd7vkTFJ0zP5Ue3+Okv9vnbxH4qCz3TOvkkIJz81xTTi+0iq6d
        Zxx6fIa2f+UkFY/CcapeJd8VPn/X8H8rhL5HST8wJvtC79iAoqtj4hp7/leM/+ZK/D0G/1/p8195WY8a
        kiIk4QAAAABJRU5ErkJggg==
</value>
  </data>
</root>