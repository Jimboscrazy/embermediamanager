<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="cdColor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>234, 17</value>
  </metadata>
  <metadata name="tmrName.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>328, 17</value>
  </metadata>
  <metadata name="cdFont.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tmrNameWait.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>106, 17</value>
  </metadata>
</root>