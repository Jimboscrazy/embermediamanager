<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>